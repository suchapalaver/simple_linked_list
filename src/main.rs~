#[derive(Debug)]
pub struct Node {
    val: i32,
    next: Option<Box<Node>>,
}

impl Node {
    fn new(val: i32) -> Node {
	Node{ val, next: None }
    }
}

fn to_list(vector: Vec<i32>) -> Option<Box<Node>> {
    let mut cur = None;
    for &value in vector.iter().rev() {
	let mut new_node = Node::new(value);
	new_node.next = cur;
	cur = Some(Box::new(new_node));
    }
    cur
}
fn main() {
    let _init_node = Node { val: 0, next: Some(Box::new(Node::new(1))) }; 
    let vector = vec![0, 1, 2, 3]; 
    println!("{:?}", to_list(vector));
}
